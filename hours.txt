Hour; Description

1; Project planning. Review fundamentals of NgRx.
2; Pull together basic functionality of app. Familiarise with angular material components. List component functionality and basic styling.
3-4.5; Fleshing out the task.service implentation, making is psuedo async. Added grid to the mat-cards to tidy them up.
4.5-5 ; Add add task component + filter component. Add a home component. Try to think of a nice architecture! Implement add task functionality.
5-6; Implement filter functionality. Beautify filter and home components.  Added NgRx store and friends. Updated Angular from 11 to 12 to match latest version of store.
7-9.5; Add redux pattern to app. Review official documentation to Implement latest version of pattern. Got loadTasks working and have a fair idea now how it works.
9.5-10; Reviewed strange bug where *ngFor directive started rendering content twice in this case for incoming task items. Tried with a simple list of primitives and it works as intended. 
    Eureka moment,just realised I was hardcoding tasks twice. /
10-11; Move remaining task-list component / task.service interactions to store. Implemented Add and Delete with some further teething problems with passing information via reducers/effects.
11-12; Another ngrx oddity where my add fuction stopped working because it seems ngrx stores modify object descriptors so my simplistic way of doing things was longer possible (as was mutating original array).
12-12.25: Move update function to store.
12.25-15: Where is the time going... tried to implement filter using ngrx, and noticed that it doesnt really work as the state is changed, which is not what I want. 
        Looking online it seems like what I need are Selector functions. Thought about doing it the old fashionway with child components / inputs and outputs. 
        That really screws up the nice async task view...